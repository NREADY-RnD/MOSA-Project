// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.

using Mosa.Compiler.Framework;
using System.Collections.Generic;

namespace Mosa.Compiler.Framework.IR
{
	/// <summary>
	/// IR Instruction Map
	/// </summary>
	public static class IRInstructions
	{
		public static readonly List<BaseInstruction> List = new List<BaseInstruction> {
			IRInstruction.AddR4,
			IRInstruction.AddR8,
			IRInstruction.AddressOf,
			IRInstruction.Add32,
			IRInstruction.Add64,
			IRInstruction.AddCarryOut32,
			IRInstruction.AddCarryOut64,
			IRInstruction.AddWithCarry32,
			IRInstruction.AddWithCarry64,
			IRInstruction.ArithShiftRight32,
			IRInstruction.ArithShiftRight64,
			IRInstruction.BlockEnd,
			IRInstruction.BlockStart,
			IRInstruction.Call,
			IRInstruction.CallDirect,
			IRInstruction.CallDynamic,
			IRInstruction.CallInterface,
			IRInstruction.CallStatic,
			IRInstruction.CallVirtual,
			IRInstruction.CompareR4,
			IRInstruction.CompareR8,
			IRInstruction.CompareInt32x32,
			IRInstruction.CompareInt32x64,
			IRInstruction.CompareInt64x32,
			IRInstruction.CompareInt64x64,
			IRInstruction.CompareIntBranch32,
			IRInstruction.CompareIntBranch64,
			IRInstruction.ConvertR4ToR8,
			IRInstruction.ConvertR4ToInt32,
			IRInstruction.ConvertR4ToInt64,
			IRInstruction.ConvertR8ToR4,
			IRInstruction.ConvertR8ToInt32,
			IRInstruction.ConvertR8ToInt64,
			IRInstruction.ConvertInt32ToR4,
			IRInstruction.ConvertInt64ToR4,
			IRInstruction.ConvertInt32ToR8,
			IRInstruction.ConvertInt64ToR8,
			IRInstruction.DivR4,
			IRInstruction.DivR8,
			IRInstruction.DivSigned32,
			IRInstruction.DivSigned64,
			IRInstruction.DivUnsigned32,
			IRInstruction.DivUnsigned64,
			IRInstruction.Epilogue,
			IRInstruction.ExceptionEnd,
			IRInstruction.ExceptionStart,
			IRInstruction.FilterEnd,
			IRInstruction.FilterStart,
			IRInstruction.FinallyEnd,
			IRInstruction.FinallyStart,
			IRInstruction.Flow,
			IRInstruction.Gen,
			IRInstruction.GotoLeaveTarget,
			IRInstruction.IntrinsicMethodCall,
			IRInstruction.IsInstanceOfType,
			IRInstruction.IsInstanceOfInterfaceType,
			IRInstruction.Jmp,
			IRInstruction.Kill,
			IRInstruction.KillAll,
			IRInstruction.KillAllExcept,
			IRInstruction.LoadConstant32,
			IRInstruction.LoadConstant64,
			IRInstruction.LoadCompound,
			IRInstruction.LoadR4,
			IRInstruction.LoadR8,
			IRInstruction.LoadInt32,
			IRInstruction.LoadInt64,
			IRInstruction.LoadSignExtend8x32,
			IRInstruction.LoadSignExtend16x32,
			IRInstruction.LoadSignExtend8x64,
			IRInstruction.LoadSignExtend16x64,
			IRInstruction.LoadSignExtend32x64,
			IRInstruction.LoadZeroExtend8x32,
			IRInstruction.LoadZeroExtend16x32,
			IRInstruction.LoadZeroExtend8x64,
			IRInstruction.LoadZeroExtend16x64,
			IRInstruction.LoadZeroExtend32x64,
			IRInstruction.LoadParamCompound,
			IRInstruction.LoadParamR4,
			IRInstruction.LoadParamR8,
			IRInstruction.LoadParamInt32,
			IRInstruction.LoadParamInt64,
			IRInstruction.LoadParamSignExtend8x32,
			IRInstruction.LoadParamSignExtend16x32,
			IRInstruction.LoadParamSignExtend8x64,
			IRInstruction.LoadParamSignExtend16x64,
			IRInstruction.LoadParamSignExtend32x64,
			IRInstruction.LoadParamZeroExtend8x32,
			IRInstruction.LoadParamZeroExtend16x32,
			IRInstruction.LoadParamZeroExtend8x64,
			IRInstruction.LoadParamZeroExtend16x64,
			IRInstruction.LoadParamZeroExtend32x64,
			IRInstruction.LogicalAnd32,
			IRInstruction.LogicalAnd64,
			IRInstruction.LogicalNot32,
			IRInstruction.LogicalNot64,
			IRInstruction.LogicalOr32,
			IRInstruction.LogicalOr64,
			IRInstruction.LogicalXor32,
			IRInstruction.LogicalXor64,
			IRInstruction.MemorySet,
			IRInstruction.MoveCompound,
			IRInstruction.MoveR4,
			IRInstruction.MoveR8,
			IRInstruction.SignExtend8x32,
			IRInstruction.SignExtend16x32,
			IRInstruction.SignExtend8x64,
			IRInstruction.SignExtend16x64,
			IRInstruction.SignExtend32x64,
			IRInstruction.ZeroExtend8x32,
			IRInstruction.ZeroExtend16x32,
			IRInstruction.ZeroExtend8x64,
			IRInstruction.ZeroExtend16x64,
			IRInstruction.ZeroExtend32x64,
			IRInstruction.MoveInt32,
			IRInstruction.MoveInt64,
			IRInstruction.MulR4,
			IRInstruction.MulR8,
			IRInstruction.MulSigned32,
			IRInstruction.MulSigned64,
			IRInstruction.MulUnsigned64,
			IRInstruction.MulUnsigned32,
			IRInstruction.NewArray,
			IRInstruction.NewObject,
			IRInstruction.NewString,
			IRInstruction.Nop,
			IRInstruction.Phi32,
			IRInstruction.Phi64,
			IRInstruction.PhiR4,
			IRInstruction.PhiR8,
			IRInstruction.Prologue,
			IRInstruction.RemR4,
			IRInstruction.RemR8,
			IRInstruction.RemSigned32,
			IRInstruction.RemSigned64,
			IRInstruction.RemUnsigned32,
			IRInstruction.RemUnsigned64,
			IRInstruction.SetReturnR4,
			IRInstruction.SetReturnR8,
			IRInstruction.SetReturn32,
			IRInstruction.SetReturn64,
			IRInstruction.SetReturnCompound,
			IRInstruction.SetLeaveTarget,
			IRInstruction.ShiftLeft32,
			IRInstruction.ShiftLeft64,
			IRInstruction.ShiftRight32,
			IRInstruction.ShiftRight64,
			IRInstruction.StableObjectTracking,
			IRInstruction.StoreCompound,
			IRInstruction.StoreR4,
			IRInstruction.StoreR8,
			IRInstruction.StoreInt8,
			IRInstruction.StoreInt16,
			IRInstruction.StoreInt32,
			IRInstruction.StoreInt64,
			IRInstruction.StoreParamCompound,
			IRInstruction.StoreParamR4,
			IRInstruction.StoreParamR8,
			IRInstruction.StoreParamInt8,
			IRInstruction.StoreParamInt16,
			IRInstruction.StoreParamInt32,
			IRInstruction.StoreParamInt64,
			IRInstruction.SubR4,
			IRInstruction.SubR8,
			IRInstruction.Sub32,
			IRInstruction.Sub64,
			IRInstruction.SubCarryOut32,
			IRInstruction.SubCarryOut64,
			IRInstruction.SubWithCarry32,
			IRInstruction.SubWithCarry64,
			IRInstruction.Switch,
			IRInstruction.Throw,
			IRInstruction.Truncation64x32,
			IRInstruction.TryEnd,
			IRInstruction.TryStart,
			IRInstruction.UnstableObjectTracking,
			IRInstruction.Rethrow,
			IRInstruction.GetVirtualFunctionPtr,
			IRInstruction.MemoryCopy,
			IRInstruction.Box,
			IRInstruction.Box32,
			IRInstruction.Box64,
			IRInstruction.BoxR4,
			IRInstruction.BoxR8,
			IRInstruction.Unbox,
			IRInstruction.Unbox32,
			IRInstruction.Unbox64,
			IRInstruction.To64,
			IRInstruction.GetLow64,
			IRInstruction.GetHigh64,
			IRInstruction.IfThenElse32,
			IRInstruction.IfThenElse64,
			IRInstruction.BitCopyR4ToInt32,
			IRInstruction.BitCopyR8ToInt64,
			IRInstruction.BitCopyInt32ToR4,
			IRInstruction.BitCopyInt64ToR8,
		};
	}
}
