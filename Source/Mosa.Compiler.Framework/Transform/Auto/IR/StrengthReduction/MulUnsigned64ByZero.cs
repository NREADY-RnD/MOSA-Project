// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.

using Mosa.Compiler.Framework.IR;

namespace Mosa.Compiler.Framework.Transform.Auto.IR.StrengthReduction
{
	/// <summary>
	/// MulUnsigned64ByZero
	/// </summary>
	public sealed class MulUnsigned64ByZero : BaseTransformation
	{
		public MulUnsigned64ByZero() : base(IRInstruction.MulUnsigned64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand2.IsResolvedConstant)
				return false;

			if (context.Operand2.ConstantUnsigned64 != 0)
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var e1 = transformContext.CreateConstant(To64(0));

			context.SetInstruction(IRInstruction.Move64, result, e1);
		}
	}

	/// <summary>
	/// MulUnsigned64ByZerov1
	/// </summary>
	public sealed class MulUnsigned64ByZerov1 : BaseTransformation
	{
		public MulUnsigned64ByZerov1() : base(IRInstruction.MulUnsigned64)
		{
		}

		public override bool Match(Context context, TransformContext transformContext)
		{
			if (!context.Operand1.IsResolvedConstant)
				return false;

			if (context.Operand1.ConstantUnsigned64 != 0)
				return false;

			return true;
		}

		public override void Transform(Context context, TransformContext transformContext)
		{
			var result = context.Result;

			var e1 = transformContext.CreateConstant(To64(0));

			context.SetInstruction(IRInstruction.Move64, result, e1);
		}
	}
}
