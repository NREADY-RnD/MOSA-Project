// Copyright (c) MOSA Project. Licensed under the New BSD License.

// This code was generated by an automated template.


namespace Mosa.Compiler.Framework.Transformation.Auto
{
	/// <summary>
	/// Transformations
	/// </summary>
	public static class AutoTransformation
	{
		public static readonly BaseTransformation IR_ConstantFolding_Add32 = new IR.ConstantFolding.Add32();
		public static readonly BaseTransformation IR_ConstantFolding_Add64 = new IR.ConstantFolding.Add64();
		public static readonly BaseTransformation IR_ConstantFolding_AddFloatR4 = new IR.ConstantFolding.AddFloatR4();
		public static readonly BaseTransformation IR_ConstantFolding_AddFloatR8 = new IR.ConstantFolding.AddFloatR8();
		public static readonly BaseTransformation IR_ConstantFolding_AddWithCarry32 = new IR.ConstantFolding.AddWithCarry32();
		public static readonly BaseTransformation IR_ConstantFolding_AddWithCarry64 = new IR.ConstantFolding.AddWithCarry64();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftRight32 = new IR.ConstantFolding.ShiftRight32();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftRight64 = new IR.ConstantFolding.ShiftRight64();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftLeft32 = new IR.ConstantFolding.ShiftLeft32();
		public static readonly BaseTransformation IR_ConstantFolding_ShiftLeft64 = new IR.ConstantFolding.ShiftLeft64();
		public static readonly BaseTransformation IR_ConstantFolding_DivUnsigned32 = new IR.ConstantFolding.DivUnsigned32();
		public static readonly BaseTransformation IR_ConstantFolding_DivUnsigned64 = new IR.ConstantFolding.DivUnsigned64();
		public static readonly BaseTransformation IR_ConstantFolding_DivSigned32 = new IR.ConstantFolding.DivSigned32();
		public static readonly BaseTransformation IR_ConstantFolding_DivSigned64 = new IR.ConstantFolding.DivSigned64();
		public static readonly BaseTransformation IR_ConstantFolding_DivFloatR8 = new IR.ConstantFolding.DivFloatR8();
		public static readonly BaseTransformation IR_ConstantFolding_DivFloatR4 = new IR.ConstantFolding.DivFloatR4();
		public static readonly BaseTransformation IR_ConstantFolding_GetHigh64 = new IR.ConstantFolding.GetHigh64();
		public static readonly BaseTransformation IR_ConstantFolding_GetLow64 = new IR.ConstantFolding.GetLow64();
		public static readonly BaseTransformation IR_ConstantFolding_To64 = new IR.ConstantFolding.To64();
		public static readonly BaseTransformation IR_ConstantFolding_LogicalAnd32 = new IR.ConstantFolding.LogicalAnd32();
		public static readonly BaseTransformation IR_ConstantFolding_LogicalAnd64 = new IR.ConstantFolding.LogicalAnd64();
		public static readonly BaseTransformation IR_ConstantFolding_LogicalOr32 = new IR.ConstantFolding.LogicalOr32();
		public static readonly BaseTransformation IR_ConstantFolding_LogicalOr64 = new IR.ConstantFolding.LogicalOr64();
		public static readonly BaseTransformation IR_ConstantFolding_LogicalXor32 = new IR.ConstantFolding.LogicalXor32();
		public static readonly BaseTransformation IR_ConstantFolding_LogicalXor64 = new IR.ConstantFolding.LogicalXor64();
		public static readonly BaseTransformation IR_ConstantFolding_LogicalNot32 = new IR.ConstantFolding.LogicalNot32();
		public static readonly BaseTransformation IR_ConstantFolding_LogicalNot64 = new IR.ConstantFolding.LogicalNot64();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned32 = new IR.ConstantFolding.MulUnsigned32();
		public static readonly BaseTransformation IR_ConstantFolding_MulUnsigned64 = new IR.ConstantFolding.MulUnsigned64();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned32 = new IR.ConstantFolding.MulSigned32();
		public static readonly BaseTransformation IR_ConstantFolding_MulSigned64 = new IR.ConstantFolding.MulSigned64();
		public static readonly BaseTransformation IR_ConstantFolding_MulFloatR4 = new IR.ConstantFolding.MulFloatR4();
		public static readonly BaseTransformation IR_ConstantFolding_MulFloatR8 = new IR.ConstantFolding.MulFloatR8();
		public static readonly BaseTransformation IR_ConstantFolding_RemUnsigned32 = new IR.ConstantFolding.RemUnsigned32();
		public static readonly BaseTransformation IR_ConstantFolding_RemUnsigned64 = new IR.ConstantFolding.RemUnsigned64();
		public static readonly BaseTransformation IR_ConstantFolding_RemSigned32 = new IR.ConstantFolding.RemSigned32();
		public static readonly BaseTransformation IR_ConstantFolding_RemSigned64 = new IR.ConstantFolding.RemSigned64();
		public static readonly BaseTransformation IR_ConstantFolding_RemFloatR4 = new IR.ConstantFolding.RemFloatR4();
		public static readonly BaseTransformation IR_ConstantFolding_RemFloatR8 = new IR.ConstantFolding.RemFloatR8();
		public static readonly BaseTransformation IR_ConstantFolding_Sub32 = new IR.ConstantFolding.Sub32();
		public static readonly BaseTransformation IR_ConstantFolding_Sub64 = new IR.ConstantFolding.Sub64();
		public static readonly BaseTransformation IR_ConstantFolding_SubFloatR4 = new IR.ConstantFolding.SubFloatR4();
		public static readonly BaseTransformation IR_ConstantFolding_SubFloatR8 = new IR.ConstantFolding.SubFloatR8();
		public static readonly BaseTransformation IR_ConstantFolding_SubWithCarry32 = new IR.ConstantFolding.SubWithCarry32();
		public static readonly BaseTransformation IR_ConstantFolding_SubWithCarry64 = new IR.ConstantFolding.SubWithCarry64();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend16x32 = new IR.ConstantFolding.SignExtend16x32();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend16x64 = new IR.ConstantFolding.SignExtend16x64();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend32x64 = new IR.ConstantFolding.SignExtend32x64();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend8x32 = new IR.ConstantFolding.SignExtend8x32();
		public static readonly BaseTransformation IR_ConstantFolding_SignExtend8x64 = new IR.ConstantFolding.SignExtend8x64();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend16x32 = new IR.ConstantFolding.ZeroExtend16x32();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend16x64 = new IR.ConstantFolding.ZeroExtend16x64();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend32x64 = new IR.ConstantFolding.ZeroExtend32x64();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend8x32 = new IR.ConstantFolding.ZeroExtend8x32();
		public static readonly BaseTransformation IR_ConstantFolding_ZeroExtend8x64 = new IR.ConstantFolding.ZeroExtend8x64();
		public static readonly BaseTransformation IR_ConstantFolding_ConvertInt32ToFloatR4 = new IR.ConstantFolding.ConvertInt32ToFloatR4();
		public static readonly BaseTransformation IR_ConstantFolding_ConvertInt32ToFloatR8 = new IR.ConstantFolding.ConvertInt32ToFloatR8();
		public static readonly BaseTransformation IR_ConstantFolding_ConvertInt64ToFloatR4 = new IR.ConstantFolding.ConvertInt64ToFloatR4();
		public static readonly BaseTransformation IR_ConstantFolding_ConvertInt64ToFloatR8 = new IR.ConstantFolding.ConvertInt64ToFloatR8();
		public static readonly BaseTransformation IR_StrengthReduction_Add32LeftZero = new IR.StrengthReduction.Add32LeftZero();
		public static readonly BaseTransformation IR_StrengthReduction_Add32RightZero = new IR.StrengthReduction.Add32RightZero();
		public static readonly BaseTransformation IR_StrengthReduction_Add64LeftZero = new IR.StrengthReduction.Add64LeftZero();
		public static readonly BaseTransformation IR_StrengthReduction_Add64RightZero = new IR.StrengthReduction.Add64RightZero();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftRight32ZeroValue = new IR.StrengthReduction.ShiftRight32ZeroValue();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftRight32ByZero = new IR.StrengthReduction.ShiftRight32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftRight64ZeroValue = new IR.StrengthReduction.ShiftRight64ZeroValue();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftRight64ByZero = new IR.StrengthReduction.ShiftRight64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftLeft32ByZero = new IR.StrengthReduction.ShiftLeft32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_ShiftLeft64ByZero = new IR.StrengthReduction.ShiftLeft64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_Sub32ByZero = new IR.StrengthReduction.Sub32ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_Sub64ByZero = new IR.StrengthReduction.Sub64ByZero();
		public static readonly BaseTransformation IR_StrengthReduction_Sub32BySame = new IR.StrengthReduction.Sub32BySame();
		public static readonly BaseTransformation IR_StrengthReduction_Sub64BySame = new IR.StrengthReduction.Sub64BySame();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned32ByPowerOfTwo = new IR.StrengthReduction.MulUnsigned32ByPowerOfTwo();
		public static readonly BaseTransformation IR_StrengthReduction_MulUnsigned64ByPowerOfTwo = new IR.StrengthReduction.MulUnsigned64ByPowerOfTwo();
		public static readonly BaseTransformation IR_Rewrite_Add32MultipleWithCommon = new IR.Rewrite.Add32MultipleWithCommon();
		public static readonly BaseTransformation IR_Rewrite_Add64MultipleWithCommon = new IR.Rewrite.Add64MultipleWithCommon();
		public static readonly BaseTransformation IR_Rewrite_Sub32MultipleWithCommon = new IR.Rewrite.Sub32MultipleWithCommon();
		public static readonly BaseTransformation IR_Rewrite_Sub64MultipleWithCommon = new IR.Rewrite.Sub64MultipleWithCommon();
	}
}
